{"version":3,"sources":["FacetContainer.tsx","ColorFacet.tsx","Facet.tsx","Facets.tsx","Modal.tsx","SearchBar.tsx","Nav.tsx","ProductCard.tsx","ProductGrid.tsx","ProductOverlayCard.tsx","ResultsSummary.tsx","App.tsx","useAnswers.ts","useCart.tsx","reportWebVitals.ts","index.tsx"],"names":["FacetContainer","children","name","count","useState","expanded","setExpanded","className","onClick","e","classnames","ColorFacet","facet","maxOptions","onSelectFacet","filteredOptions","options","filter","o","i","sort","a","b","displayName","localeCompare","selected","length","map","style","backgroundColor","stc","Facet","query","underMaxLength","toLocaleLowerCase","includes","Facets","facets","toggleFacet","f","fieldId","Modal","SearchBar","runSearch","placeholder","loading","querySuggestions","updateAutocomplete","inputElement","useRef","setQuery","isFocused","setIsFocused","selectedSuggestion","setSelectedSuggestion","justSearched","setJustSearched","showQuerySuggestion","onSubmit","preventDefault","value","onFocus","onBlur","ref","onChange","target","onKeyDown","key","s","Math","min","max","q","onMouseDown","Nav","shoppingCart","showingCart","setShowingCart","onMouseEnter","onMouseLeave","c","src","product","photoGallery","image","sourceUrl","width","quantity","c_price","ProductCard","showQuickLook","addToCart","setMouseOver","url","alt","c_material","c_shape","ProductGrid","results","products","loadMore","onQuickLook","onAddToCart","overflow","hasMore","resultsCount","next","dataLength","endMessage","loader","p","id","ProductOverlayCard","onClose","selectedImageURL","setSelectedImageURL","buttonClassName","j","ResultsSummary","totalResults","visibleResults","answers","provideCore","apiKey","experienceKey","experienceVersion","locale","App","quickLookProduct","setQuickLookProduct","verticalKey","verticalResponse","setVerticalResponse","entities","setEntities","setLoading","useImmer","localState","setLocalState","isDirty","setIsDirty","setQuerySuggestions","facetFilters","flat","console","log","verticalSearch","context","retrieveFacets","res","verticalResults","r","rawData","offset","verticalAutoComplete","input","useEffect","option","forEach","useAnswersVertical","setShoppingCart","addToast","useToasts","addProductToCart","cart","added","updatedCart","push","appearance","autoDismiss","useCart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","components","Toast","document","getElementById"],"mappings":"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","file":"static/js/main.9e520f45.chunk.js","sourcesContent":["import classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\ntype Props = {\n  //Insert Props Here\n  children: React.ReactNode;\n  name: string;\n  count: number;\n};\n\nconst FacetContainer: React.FC<Props> = ({ children, name, count }) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <div className=\" py-2 mb-3\">\n      <div\n        className=\"flex justify-between items-center cursor-pointer\"\n        onClick={() => setExpanded((e) => !e)}\n      >\n        <div className=\"text-black font-medium text-sm flex itesm-center\">\n          <div>{name}</div>\n          {count > 0 && <div className=\"ml-1\">({count})</div>}\n        </div>\n        <div\n          className={classnames(\n            \"text-gray-500 transform ease-in-out transition\",\n            {\n              \"rotate-90\": expanded,\n            }\n          )}\n        >\n          <FaChevronRight />\n        </div>\n      </div>\n      {expanded && <div className=\"mt-2\">{children}</div>}\n    </div>\n  );\n};\n\nexport default FacetContainer;\n","import { Facet as FacetType, FacetOption } from \"@yext/answers-core\";\nimport React from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { MdCheck } from \"react-icons/md\";\nimport stc from \"string-to-color\";\nimport FacetContainer from \"./FacetContainer\";\n\ntype Props = {\n  //Insert Props Here\n  facet: FacetType;\n  maxOptions?: number;\n  onSelectFacet: (option: FacetOption) => void;\n};\n\nconst ColorFacet: React.FC<Props> = ({\n  facet,\n  maxOptions = 10,\n  onSelectFacet,\n}) => {\n  const filteredOptions = facet.options\n    .filter((o, i) => i < maxOptions)\n    .sort((a, b) => {\n      return a.displayName.localeCompare(b.displayName);\n    });\n\n  return (\n    <FacetContainer\n      name={facet.displayName}\n      count={facet.options.filter((o) => o.selected).length}\n    >\n      <FlipMove className=\"grid grid-cols-3\">\n        {filteredOptions.map((o) => (\n          <div\n            className=\"font-light flex flex-col items-center mb-3 group cursor-pointer hover:opacity-75\"\n            key={o.displayName}\n            onClick={() => onSelectFacet(o)}\n          >\n            <div\n              className=\"h-6 w-6 rounded-full mb-1 group-hover:opactiy-75 flex items-center justify-center\"\n              style={{ backgroundColor: stc(o.displayName) }}\n            >\n              {o.selected && <MdCheck className=\"text-white\" />}\n              {!o.selected && (\n                <div className=\"text-white text-xs opacity-60\">{o.count}</div>\n              )}\n            </div>\n\n            <div className=\"text-xs text-light text-gray-600\">\n              {o.displayName}\n            </div>\n          </div>\n        ))}\n      </FlipMove>\n    </FacetContainer>\n  );\n};\n\nexport default ColorFacet;\n","import { Facet as FacetType, FacetOption } from \"@yext/answers-core\";\nimport classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { MdCheck } from \"react-icons/md\";\nimport FacetContainer from \"./FacetContainer\";\n\ntype Props = {\n  //Insert Props Here\n  facet: FacetType;\n  maxOptions?: number;\n  onSelectFacet: (option: FacetOption) => void;\n};\n\nconst Facet: React.FC<Props> = ({ facet, maxOptions = 10, onSelectFacet }) => {\n  const [query, setQuery] = useState(\"\");\n  const filteredOptions = facet.options\n    .filter((o, i) => {\n      const underMaxLength = i < maxOptions;\n      let queryMatch = false;\n      if (query.length > 0) {\n        queryMatch = o.displayName\n          .toLocaleLowerCase()\n          .includes(query.toLocaleLowerCase());\n      } else {\n        queryMatch = true;\n      }\n      return queryMatch && underMaxLength;\n    })\n    .sort((a, b) => {\n      if (a.selected && b.selected) return b.count - a.count;\n      else if (a.selected) return -1;\n      else if (b.selected) return 1;\n      else return b.count - a.count;\n    });\n\n  return (\n    <FacetContainer\n      name={facet.displayName}\n      count={facet.options.filter((o) => o.selected).length}\n    >\n      <FlipMove>\n        {filteredOptions.map((o) => (\n          <div\n            className=\"font-light text-gray-500 flex items-center mb-1 group cursor-pointer\"\n            key={o.displayName}\n            onClick={() => onSelectFacet(o)}\n          >\n            <div\n              className={classnames(\n                \"w-4 h-4 border mr-2 rounded-sm flex items-center justify-center\",\n                {\n                  \"bg-gray-600 border-gray-600\": o.selected,\n                  \"border group-hover:bg-gray-200 \": !o.selected,\n                }\n              )}\n            >\n              {o.selected && <MdCheck className=\"text-white\" />}\n            </div>\n            {o.displayName}{\" \"}\n            <span className=\"text-xs bg-gray-100 px-1 rounded-full text-gray-600 ml-2\">\n              {o.count}\n            </span>\n          </div>\n        ))}\n      </FlipMove>\n    </FacetContainer>\n  );\n};\n\nexport default Facet;\n","import { Facet as FacetType } from \"@yext/answers-core\";\nimport React from \"react\";\nimport ColorFacet from \"./ColorFacet\";\nimport Facet from \"./Facet\";\n\ntype Props = {\n  //Insert Props Here\n  facets: FacetType[];\n  toggleFacet: (facet: string, option: string) => void;\n};\n\nconst Facets: React.FC<Props> = ({ facets, toggleFacet }) => {\n  return (\n    <div className=\"flex flex-col px-4 pb-4 mt-4\">\n      {facets &&\n        facets.map((f) => (\n          <div key={f.fieldId}>\n            {f.fieldId !== \"c_color\" && (\n              <Facet\n                facet={f}\n                onSelectFacet={(o) => toggleFacet(f.displayName, o.displayName)}\n              />\n            )}\n            {f.fieldId === \"c_color\" && (\n              <ColorFacet\n                facet={f}\n                onSelectFacet={(o) => toggleFacet(f.displayName, o.displayName)}\n              />\n            )}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Facets;\n","import React from \"react\";\n\ntype Props = {\n  //Insert Props Here\n  children: React.ReactNode;\n};\n\nconst Modal: React.FC<Props> = ({ children }) => {\n  return (\n    <div>\n      <div className=\"fixed left-0 right-0 top-0 bottom-0 bg-gray-400 opacity-80 z-40\"></div>\n      <div className=\"fixed left-0 right-0 top-0 bottom-0 z-50 flex items-center justify-center\">\n        <div className=\"w-1/2\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { AutoCompleteResult } from \"@yext/answers-core\";\nimport classnames from \"classnames\";\nimport React, { useRef, useState } from \"react\";\nimport { FaSpinner, FaTimesCircle } from \"react-icons/fa\";\nimport { MdSearch } from \"react-icons/md\";\n\ntype Props = {\n  //Insert Props Here\n  runSearch: (query: string) => void;\n  placeholder?: string;\n  loading?: boolean;\n  querySuggestions: AutoCompleteResult[];\n  updateAutocomplete: (query: string) => void;\n};\n\nconst SearchBar: React.FC<Props> = ({\n  runSearch,\n  placeholder = \"Search ...\",\n  loading,\n  querySuggestions = [],\n  updateAutocomplete,\n}) => {\n  const inputElement = useRef(null);\n\n  const [query, setQuery] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedSuggestion, setSelectedSuggestion] = useState(-1);\n  const [justSearched, setJustSearched] = useState(false);\n\n  const nextSuggestion = () => {\n    setSelectedSuggestion((s) => Math.min(s + 1, querySuggestions.length - 1));\n  };\n\n  const prevSuggestion = () => {\n    setSelectedSuggestion((s) => Math.max(s - 1, -1));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    updateAutocomplete(e.target.value);\n    setSelectedSuggestion(-1);\n    setJustSearched(false);\n  };\n\n  const showQuerySuggestion =\n    isFocused && querySuggestions.length > 0 && !justSearched;\n  return (\n    <div className=\"relative mx-2 mt-2\">\n      <form\n        className=\"py-2 px-2 mb-2 flex items-center focus-within:shodow-lg focus-within:border group text-gray-700\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (selectedSuggestion > -1) {\n            const query = querySuggestions[selectedSuggestion].value;\n            setQuery(query);\n            runSearch(query);\n          } else {\n            runSearch(query);\n          }\n          setJustSearched(true);\n        }}\n      >\n        <MdSearch className=\"mr-2 text-gray-600 text-xl\" />\n        <input\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          ref={inputElement}\n          value={query}\n          placeholder={placeholder}\n          onChange={handleChange}\n          className=\"w-full focus:outline-none font-light bg-transparent\"\n          onKeyDown={(e) => {\n            if (e.key === \"ArrowDown\") {\n              e.preventDefault();\n              nextSuggestion();\n            } else if (e.key === \"ArrowUp\") {\n              e.preventDefault();\n              prevSuggestion();\n            }\n          }}\n        />\n        {loading && <FaSpinner className=\"animate-spin text-gray-500\" />}\n        {!loading && query.length > 0 && (\n          <FaTimesCircle\n            className=\"text-gray-300 cursor-pointer group-hover:opacity-100 opacity-0\"\n            onClick={() => {\n              setQuery(\"\");\n              runSearch(\"\");\n              updateAutocomplete(\"\");\n            }}\n          />\n        )}\n      </form>\n      {showQuerySuggestion && (\n        <div className=\"absolute top-0 mt-10 left-0 right-0 bg-white text-gray-700 font-light border-b border-l border-r shadow-lg z-50\">\n          {querySuggestions.map((q, i) => (\n            <div\n              onMouseDown={() => {\n                setQuery(q.value);\n                runSearch(q.value);\n              }}\n              className={classnames(\n                \"py-1 px-4 hover:bg-gray-100 cursor-pointer flex items-center\",\n                {\n                  \"bg-gray-100\": selectedSuggestion === i,\n                }\n              )}\n            >\n              <MdSearch className=\"mr-2 text-gray-600\" />\n              {q.value}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { AutoCompleteResult } from \"@yext/answers-core\";\nimport React, { useState } from \"react\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport SearchBar from \"./SearchBar\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  runSearch: () => void;\n  loading: boolean;\n  querySuggestions: AutoCompleteResult[];\n  updateAutocomplete: (q: string) => void;\n  shoppingCart: {\n    quantity: number;\n    product: Product;\n  }[];\n};\n\nconst Nav: React.FC<Props> = ({\n  shoppingCart,\n  updateAutocomplete,\n  querySuggestions,\n  loading,\n  runSearch,\n}) => {\n  const [showingCart, setShowingCart] = useState(false);\n  return (\n    <div className=\"border-b flex justify-between items-stretch \">\n      <div className=\"text-xl font-light px-4 text-green-700 flex items-center\">\n        Seaglass\n      </div>\n      <div className=\" items-center text-gray-700 px-4 hidden md:flex\">\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">Products</div>\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">\n          Locations\n        </div>\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">Support</div>\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">About Us</div>\n      </div>\n      <div className=\"flex\">\n        <SearchBar\n          runSearch={runSearch}\n          placeholder=\"Search for glasses...\"\n          loading={loading}\n          updateAutocomplete={updateAutocomplete}\n          querySuggestions={querySuggestions}\n        />\n        <div\n          className=\"border-l p-4 text-gray-700 flex items-center\"\n          onMouseEnter={() => setShowingCart(true)}\n          onMouseLeave={() => setShowingCart(false)}\n        >\n          <FaShoppingCart />\n          {shoppingCart.length > 0 && (\n            <div className=\"absolute right-0 top-0 m-2 p-1 h-4 w-4 flex items-center rounded-full bg-gray-700 text-gray-100 text-xs\">\n              {shoppingCart.length}\n            </div>\n          )}\n          {showingCart && (\n            <div className=\"flex flex-col absolute top-16 right-0 mr-2 rounded bg-white border shadow-lg z-50\">\n              {shoppingCart.map((c) => (\n                <div className=\"border-b px-4 py-2 w-64 flex items-center\">\n                  <div className=\"w-24 mr-4\">\n                    <div>\n                      <img\n                        src={c.product.photoGallery[2].image.sourceUrl}\n                        width=\"100%\"\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"font-medium\">{c.product.name}</div>\n                    <div className=\"text-gray-500 text-sm\">\n                      {c.quantity} x ${c.product.c_price}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport { FaCartPlus, FaSearchPlus } from \"react-icons/fa\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  product: Product;\n  addToCart: () => void;\n  showQuickLook: () => void;\n};\n\nconst ProductCard = ({ product, showQuickLook, addToCart }: Props) => {\n  const [mouseOver, setMouseOver] = useState(false);\n\n  return (\n    <div\n      className=\"hover:shadow-xl hover:bg-white hover:z-30 hover:z-100 rounded cursor-pointer transform hover:scale-105 transition ease-in-out group overflow-hidden relative\"\n      onMouseEnter={() => setMouseOver(true)}\n      onMouseLeave={() => setMouseOver(false)}\n    >\n      <div className=\"p-4\" onClick={showQuickLook}>\n        <div className=\" aspect-w-4 aspect-h-2\">\n          {product.photoGallery.length > 0 && (\n            <div className=\"flex items-center  p-4\">\n              <img\n                src={product.photoGallery[2].image.url}\n                alt=\"\"\n                width=\"100%\"\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"font-medium text-black mt-4\">{product.name}</div>\n        <div className=\"text-gray-500 font-light text-sm\">\n          {product.c_material}, {product.c_shape}\n        </div>\n        <div className=\"text-gray-500 font-light text-sm\">2 colors</div>\n        <div className=\" font-medium mt-2 text-sm\">${product.c_price}</div>\n      </div>\n\n      <div className=\"flex opacity-0 group-hover:opacity-100 text-gray-500 uppercase text-xs transition ease-in-out  justify-center\">\n        <div\n          className=\"flex justify-center items-center bg-gray-100 hover:bg-gray-200 px-2 py-2 cursor-pointer flex-grow\"\n          onClick={showQuickLook}\n        >\n          <FaSearchPlus className=\"mr-2\" />\n          Look\n        </div>\n        <div\n          className=\"flex justify-center items-center bg-gray-100 hover:bg-gray-200 px-2 py-2 cursor-pointer flex-grow\"\n          onClick={addToCart}\n        >\n          <FaCartPlus className=\"mr-2\" />\n          Cart\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import { VerticalResults } from \"@yext/answers-core\";\nimport React from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ProductCard from \"./ProductCard\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  results: VerticalResults;\n  products: Product[];\n  loadMore: () => void;\n  onQuickLook: (product: Product) => void;\n  onAddToCart: (product: Product) => void;\n};\n\nconst ProductGrid: React.FC<Props> = ({\n  results,\n  products,\n  loadMore,\n  onQuickLook,\n  onAddToCart,\n}) => {\n  return (\n    <InfiniteScroll\n      className=\"overflow-x-auto\"\n      style={{ overflow: \"visible\" }}\n      hasMore={results!.resultsCount > products.length}\n      next={loadMore}\n      dataLength={products.length}\n      endMessage={\n        <div className=\"mt-12 mb-4 text-center text-gray-500 font-light text-sm\">\n          that's all...\n        </div>\n      }\n      loader={\n        <div className=\"h-12 flex items-center justify-center\">\n          <FaSpinner className=\"animate-spin text-gray-500\" />\n        </div>\n      }\n    >\n      <FlipMove className=\"grid  grid-cols-1 md:grid-cols-2 lg:grid-cols-4 2xl:grid-cols-6\">\n        {products.map((p, i) => {\n          return (\n            <div key={p.id} className=\"overflow-visible z-40\">\n              <ProductCard\n                product={p}\n                showQuickLook={() => onQuickLook(p)}\n                addToCart={() => onAddToCart(p)}\n              />\n            </div>\n          );\n        })}\n      </FlipMove>\n    </InfiniteScroll>\n  );\n};\n\nexport default ProductGrid;\n","import classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { FaCartPlus, FaSearchPlus, FaTimes } from \"react-icons/fa\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  product: Product;\n  onClose: () => void;\n  addToCart: () => void;\n};\n\nconst ProductOverlayCard = ({ product, onClose, addToCart }: Props) => {\n  const [selectedImageURL, setSelectedImageURL] = useState(\n    product.photoGallery[2].image.url\n  );\n  const buttonClassName =\n    \"px-4 py-3  bg-gray-100 text-gray-500 flex items-center justify-center cursor-pointer hover:bg-gray-200\";\n  return (\n    <div className=\"bg-white rounded shadow-xl relative overflow-hidden\">\n      <div\n        className=\"text-gray-500 p-2 hover:bg-gray-100 absolute top-0 right-0 m-2 rounded cursor-pointer z-50\"\n        onClick={onClose}\n      >\n        <FaTimes />\n      </div>\n      <div className=\"p-4\">\n        <div className=\" aspect-w-4 aspect-h-2 z-10 mb-2\">\n          <div className=\"flex items-center  p-4 overflow-hidden\">\n            <img src={selectedImageURL} alt=\"\" width=\"100%\" />\n          </div>\n        </div>\n        <div className=\"grid grid-cols-6\">\n          {product.photoGallery.map((i, j) => (\n            <div\n              key={j}\n              className=\"px-2 flex items-center hover:opactiy-70\"\n              onMouseEnter={() => setSelectedImageURL(i.image.url)}\n            >\n              <div>\n                <img src={i.image.url} />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"font-medium text-lg text-black mt-4\">\n          {product.name}\n        </div>\n        <div className=\"text-gray-500 font-light text-sm\">\n          {product.c_material}, {product.c_shape}\n        </div>\n        <div className=\"text-gray-500 font-light text-sm\">2 colors</div>\n        <div className=\" font-medium mt-2 text-sm\">${product.c_price}</div>\n      </div>\n      <div className=\"grid grid-cols-2\">\n        <div\n          onClick={addToCart}\n          className={classnames(\n            buttonClassName,\n            \" border-t border-r border-gray-200\"\n          )}\n        >\n          <FaCartPlus className=\"mr-2\" />\n          Add To Cart\n        </div>\n        <div\n          className={classnames(buttonClassName, \"border-t border-gray-200\")}\n        >\n          <FaSearchPlus className=\"mr-2\" />\n          View Details\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductOverlayCard;\n","import React from \"react\";\nimport { FaChevronDown } from \"react-icons/fa\";\n\ntype Props = {\n  //Insert Props Here\n  totalResults: number;\n  visibleResults: number;\n};\n\nconst ResultsSummary: React.FC<Props> = ({ totalResults, visibleResults }) => {\n  return (\n    <div className=\"flex justify-between items-center mb-2\">\n      <div className=\"text-sm text-gray-500\">\n        Showing {visibleResults} of {totalResults} glasses\n      </div>\n      <div className=\"text-gray-500 text-sm flex items-center hover:underline cursor-pointer\">\n        Sort By <FaChevronDown className=\"ml-2\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsSummary;\n","import { provideCore } from \"@yext/answers-core\";\nimport React, { useState } from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Facets from \"./Facets\";\nimport Modal from \"./Modal\";\nimport Nav from \"./Nav\";\nimport ProductGrid from \"./ProductGrid\";\nimport ProductOverlayCard from \"./ProductOverlayCard\";\nimport ResultsSummary from \"./ResultsSummary\";\nimport { Product } from \"./types\";\nimport { useAnswersVertical } from \"./useAnswers\";\nimport { useCart } from \"./useCart\";\n\nconst answers = provideCore({\n  apiKey: \"7bce922a5847aff36dc33345921ba700\",\n  experienceKey: \"dtc_demo\",\n  experienceVersion: \"PRODUCTION\",\n  locale: \"en\",\n});\n\nfunction App() {\n  const [quickLookProduct, setQuickLookProduct] = useState<Product | null>(\n    null\n  );\n  const {\n    runSearch,\n    loadMore,\n    loading,\n    results,\n    facets,\n    updateAutocomplete,\n    toggleFacet,\n    querySuggestions,\n    entities: products,\n  } = useAnswersVertical<Product>(answers, \"products\");\n\n  const { shoppingCart, addProductToCart } = useCart();\n\n  return (\n    <div className=\"mb-12 relative\">\n      <Nav\n        shoppingCart={shoppingCart}\n        querySuggestions={querySuggestions}\n        updateAutocomplete={updateAutocomplete}\n        runSearch={runSearch}\n        loading={loading}\n      />\n      <div className=\"flex items-start\">\n        <div className=\"w-64 xl:w-72 sticky top-0 max-h-screen overflow-y-auto pb-12 hidden md:block\">\n          <Facets facets={facets} toggleFacet={toggleFacet} />\n        </div>\n        {results && (\n          <div className=\"p-4 flex-grow\">\n            <ResultsSummary\n              totalResults={results!.resultsCount}\n              visibleResults={products.length}\n            />\n            <ProductGrid\n              products={products}\n              results={results}\n              loadMore={loadMore}\n              onAddToCart={addProductToCart}\n              onQuickLook={(p) => setQuickLookProduct(p)}\n            />\n          </div>\n        )}\n        {quickLookProduct && (\n          <Modal>\n            <ProductOverlayCard\n              addToCart={() => {\n                addProductToCart(quickLookProduct);\n                setQuickLookProduct(null);\n              }}\n              product={quickLookProduct}\n              onClose={() => setQuickLookProduct(null)}\n            />\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  AnswersCore,\n  AutoCompleteResult,\n  Facet,\n  VerticalSearchResponse,\n} from \"@yext/answers-core\";\nimport { useEffect, useState } from \"react\";\nimport { useImmer } from \"use-immer\";\n\nexport const useAnswersVertical = <T>(\n  answers: AnswersCore,\n  verticalKey: string\n) => {\n  const [\n    verticalResponse,\n    setVerticalResponse,\n  ] = useState<VerticalSearchResponse>();\n  const [entities, setEntities] = useState<T[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [localState, setLocalState] = useImmer<{ facets: Facet[] }>({\n    facets: [],\n  });\n\n  const [isDirty, setIsDirty] = useState(true);\n  const [querySuggestions, setQuerySuggestions] = useState<\n    AutoCompleteResult[]\n  >([]);\n\n  const { facets } = localState;\n  const facetFilters = facets\n    .map((f) => {\n      return [\n        ...f.options\n          .filter((o) => o.selected)\n          .map((o) => {\n            return o.filter;\n          }),\n      ];\n    })\n    .flat();\n\n  const runSearch = async (q: string = query) => {\n    console.log(`Getting Results for ${q}`);\n    setLoading(true);\n    const res = await answers.verticalSearch({\n      query: q,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      facetFilters,\n    });\n    setVerticalResponse(res);\n    setEntities(res.verticalResults.results.map((r) => r.rawData as T));\n    setLoading(false);\n    setLocalState((f) => {\n      f.facets = (res.facets as Facet[]) || [];\n    });\n  };\n\n  const loadMore = async () => {\n    console.log(\"Loading More\");\n    const res = await answers.verticalSearch({\n      query,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      facetFilters,\n      offset: entities.length,\n    });\n\n    setEntities((e) => {\n      return [...e, ...res.verticalResults.results.map((r) => r.rawData as T)];\n    });\n  };\n\n  const toggleFacet = (facet: string, option: string) => {\n    setLocalState((s) => {\n      s.facets.forEach((f) => {\n        if (f.displayName === facet) {\n          f.options.forEach((o) => {\n            if (o.displayName === option) {\n              o.selected = !o.selected;\n            }\n          });\n        } else return;\n      });\n    });\n    setIsDirty(true);\n  };\n\n  const updateAutocomplete = async (q: string = query) => {\n    const res = await answers.verticalAutoComplete({\n      input: q,\n      verticalKey,\n    });\n    setQuerySuggestions(res.results);\n  };\n\n  useEffect(() => {\n    if (isDirty) {\n      runSearch(query);\n      setIsDirty(false);\n    }\n  }, [isDirty]);\n\n  return {\n    results: verticalResponse?.verticalResults,\n    facets,\n    toggleFacet,\n    runSearch,\n    updateAutocomplete,\n    querySuggestions,\n    entities,\n    loading,\n    loadMore,\n  };\n};\n","import { useState } from \"react\";\nimport { FaCartPlus } from \"react-icons/fa\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Product } from \"./types\";\nexport const useCart = () => {\n  const [shoppingCart, setShoppingCart] = useState<\n    {\n      quantity: number;\n      product: Product;\n    }[]\n  >([]);\n\n  const { addToast } = useToasts();\n\n  const addProductToCart = (product: Product) => {\n    setShoppingCart((cart) => {\n      let added = false;\n\n      const updatedCart = cart.map((p) => {\n        if (p.product.id === product.id) {\n          added = true;\n          return {\n            product,\n            quantity: p.quantity + 1,\n          };\n        } else return p;\n      });\n      if (!added) {\n        updatedCart.push({\n          quantity: 1,\n          product,\n        });\n      }\n      return updatedCart;\n    });\n    addToast(\n      <div className=\"py-2 px-4 flex items-center font-light bg-gray-600 text-white text-sm  shadow-sm z-50 rounded-sm mb-2 mr-4 mt-4\">\n        <FaCartPlus />\n        <div className=\"ml-2\">Added</div>\n        <span className=\"font-medium ml-1\">{product.name}</span>\n        <div className=\"ml-1\">to cart</div>\n      </div>,\n      {\n        appearance: \"success\",\n        autoDismiss: true,\n      }\n    );\n  };\n\n  return {\n    shoppingCart,\n    addProductToCart,\n  };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ntype ToastProps = {\n  children: React.ReactNode;\n};\n\nconst MyCustomToast = ({ children }: ToastProps) => (\n  <div className=\"\">{children}</div>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider components={{ Toast: MyCustomToast }}>\n      <App />\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}