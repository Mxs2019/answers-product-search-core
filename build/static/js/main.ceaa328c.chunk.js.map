{"version":3,"sources":["FacetContainer.tsx","ColorFacet.tsx","Facet.tsx","answers.config.ts","store/reducer.ts","store/AnswersStore.tsx","store/facetUtilties.tsx","store/useAnswersStore.ts","Facets.tsx","Modal.tsx","SearchBar.tsx","Nav.tsx","ProductOverlayCard.tsx","ProductCard.tsx","ProductGrid.tsx","ResultsSummary.tsx","Results.tsx","App.tsx","useCart.tsx","reportWebVitals.ts","index.tsx"],"names":["FacetContainer","children","name","count","useState","expanded","setExpanded","className","onClick","e","classnames","ColorFacet","facet","maxOptions","onSelectFacet","filteredOptions","options","filter","o","i","sort","a","b","displayName","localeCompare","selected","length","map","style","backgroundColor","stc","Facet","query","underMaxLength","toLocaleLowerCase","includes","answersCore","provideCore","apiKey","experienceKey","experienceVersion","locale","verticalKey","reducer","state","action","type","loading","response","verticalresults","verticalResults","entities","results","r","rawData","facets","querySuggestions","initialState","undefined","AppContext","createContext","dispatch","AnswersStore","useReducer","Provider","value","getFacetFilters","f","flat","toggleFacetObject","facetFieldId","optionDisplayName","updatedFacets","forEach","fieldId","useAnswersStore","useContext","actions","runSearch","q","console","log","verticalSearch","context","retrieveFacets","res","updateAutocomplete","verticalAutoComplete","input","toggleFacet","facetFilters","loadMore","offset","Facets","Modal","SearchBar","placeholder","inputElement","useRef","setQuery","isFocused","setIsFocused","selectedSuggestion","setSelectedSuggestion","justSearched","setJustSearched","showQuerySuggestion","onSubmit","preventDefault","onFocus","onBlur","ref","onChange","target","onKeyDown","key","s","Math","min","max","onMouseDown","Nav","shoppingCart","showingCart","setShowingCart","onMouseEnter","onMouseLeave","c","src","product","photoGallery","image","sourceUrl","width","quantity","c_price","ProductOverlayCard","onClose","addToCart","url","selectedImageURL","setSelectedImageURL","buttonClassName","alt","j","c_material","c_shape","ProductCard","showQuickLook","setMouseOver","ProductGrid","onQuickLook","onAddToCart","products","overflow","hasMore","resultsCount","next","dataLength","endMessage","loader","p","id","ResultsSummary","Results","addProductToCart","setQuickLookProduct","App","quickLookProduct","setShoppingCart","addToast","useToasts","cart","added","updatedCart","push","appearance","autoDismiss","useCart","useEffect","toLocaleString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","components","Toast","document","getElementById"],"mappings":"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","file":"static/js/main.ceaa328c.chunk.js","sourcesContent":["import classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\ntype Props = {\n  //Insert Props Here\n  children: React.ReactNode;\n  name: string;\n  count: number;\n};\n\nconst FacetContainer: React.FC<Props> = ({ children, name, count }) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <div className=\" py-2 mb-3\">\n      <div\n        className=\"flex justify-between items-center cursor-pointer\"\n        onClick={() => setExpanded((e) => !e)}\n      >\n        <div className=\"text-black font-medium text-sm flex itesm-center\">\n          <div>{name}</div>\n          {count > 0 && <div className=\"ml-1\">({count})</div>}\n        </div>\n        <div\n          className={classnames(\n            \"text-gray-500 transform ease-in-out transition\",\n            {\n              \"rotate-90\": expanded,\n            }\n          )}\n        >\n          <FaChevronRight />\n        </div>\n      </div>\n      {expanded && <div className=\"mt-2\">{children}</div>}\n    </div>\n  );\n};\n\nexport default FacetContainer;\n","import { Facet as FacetType, FacetOption } from \"@yext/answers-core\";\nimport React from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { MdCheck } from \"react-icons/md\";\nimport stc from \"string-to-color\";\nimport FacetContainer from \"./FacetContainer\";\n\ntype Props = {\n  //Insert Props Here\n  facet: FacetType;\n  maxOptions?: number;\n  onSelectFacet: (option: FacetOption) => void;\n};\n\nconst ColorFacet: React.FC<Props> = ({\n  facet,\n  maxOptions = 10,\n  onSelectFacet,\n}) => {\n  const filteredOptions = facet.options\n    .filter((o, i) => i < maxOptions)\n    .sort((a, b) => {\n      return a.displayName.localeCompare(b.displayName);\n    });\n\n  return (\n    <FacetContainer\n      name={facet.displayName}\n      count={facet.options.filter((o) => o.selected).length}\n    >\n      <FlipMove className=\"grid grid-cols-3\">\n        {filteredOptions.map((o) => (\n          <div\n            className=\"font-light flex flex-col items-center mb-3 group cursor-pointer hover:opacity-75\"\n            key={o.displayName}\n            onClick={() => onSelectFacet(o)}\n          >\n            <div\n              className=\"h-6 w-6 rounded-full mb-1 group-hover:opactiy-75 flex items-center justify-center\"\n              style={{ backgroundColor: stc(o.displayName) }}\n            >\n              {o.selected && <MdCheck className=\"text-white\" />}\n              {!o.selected && (\n                <div className=\"text-white text-xs opacity-60\">{o.count}</div>\n              )}\n            </div>\n\n            <div className=\"text-xs text-light text-gray-600\">\n              {o.displayName}\n            </div>\n          </div>\n        ))}\n      </FlipMove>\n    </FacetContainer>\n  );\n};\n\nexport default ColorFacet;\n","import { Facet as FacetType, FacetOption } from \"@yext/answers-core\";\nimport classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { MdCheck } from \"react-icons/md\";\nimport FacetContainer from \"./FacetContainer\";\n\ntype Props = {\n  //Insert Props Here\n  facet: FacetType;\n  maxOptions?: number;\n  onSelectFacet: (option: FacetOption) => void;\n};\n\nconst Facet: React.FC<Props> = ({ facet, maxOptions = 10, onSelectFacet }) => {\n  const [query, setQuery] = useState(\"\");\n  const filteredOptions = facet.options\n    .filter((o, i) => {\n      const underMaxLength = i < maxOptions;\n      let queryMatch = false;\n      if (query.length > 0) {\n        queryMatch = o.displayName\n          .toLocaleLowerCase()\n          .includes(query.toLocaleLowerCase());\n      } else {\n        queryMatch = true;\n      }\n      return queryMatch && underMaxLength;\n    })\n    .sort((a, b) => {\n      if (a.selected && b.selected) return b.count - a.count;\n      else if (a.selected) return -1;\n      else if (b.selected) return 1;\n      else return b.count - a.count;\n    });\n\n  return (\n    <FacetContainer\n      name={facet.displayName}\n      count={facet.options.filter((o) => o.selected).length}\n    >\n      <FlipMove>\n        {filteredOptions.map((o) => (\n          <div\n            className=\"font-light text-gray-500 flex items-center mb-1 group cursor-pointer\"\n            key={o.displayName}\n            onClick={() => onSelectFacet(o)}\n          >\n            <div\n              className={classnames(\n                \"w-4 h-4 border mr-2 rounded-sm flex items-center justify-center\",\n                {\n                  \"bg-gray-600 border-gray-600\": o.selected,\n                  \"border group-hover:bg-gray-200 \": !o.selected,\n                }\n              )}\n            >\n              {o.selected && <MdCheck className=\"text-white\" />}\n            </div>\n            {o.displayName}{\" \"}\n            <span className=\"text-xs bg-gray-100 px-1 rounded-full text-gray-600 ml-2\">\n              {o.count}\n            </span>\n          </div>\n        ))}\n      </FlipMove>\n    </FacetContainer>\n  );\n};\n\nexport default Facet;\n","import { provideCore } from \"@yext/answers-core\";\n\nexport const answersCore = provideCore({\n  apiKey: \"7bce922a5847aff36dc33345921ba700\",\n  experienceKey: \"dtc_demo\",\n  experienceVersion: \"PRODUCTION\",\n  locale: \"en\",\n});\n\nexport const verticalKey = \"products\";\n","import {\n  AutoCompleteResult,\n  Facet,\n  VerticalSearchResponse,\n} from \"@yext/answers-core\";\nimport { InitialStateType } from \"./AnswersStore\";\nexport type Action =\n  | { type: \"SET_LOADING\"; loading: boolean }\n  | { type: \"SET_VERTICAL_RESPONSE\"; response: VerticalSearchResponse }\n  | { type: \"SET_QUERY_SUGGESTIONS\"; querySuggestions: AutoCompleteResult[] }\n  | { type: \"APPEND_ENTITIES\"; entities: any[] }\n  | { type: \"SET_QUERY\"; query: string }\n  | { type: \"UPDATE_FACETS\"; facets: Facet[] };\n\nconst reducer = (state: InitialStateType, action: Action): InitialStateType => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    case \"SET_QUERY\":\n      const { query } = action;\n      return {\n        ...state,\n        query,\n      };\n    case \"SET_VERTICAL_RESPONSE\":\n      const { response } = action;\n      return {\n        ...state,\n        loading: false,\n        verticalresults: response.verticalResults,\n        entities: response.verticalResults.results.map(\n          (r: any) => r.rawData as any\n        ),\n        facets: (response.facets as any) as Facet[],\n      };\n    case \"SET_QUERY_SUGGESTIONS\":\n      const { querySuggestions } = action;\n      return {\n        ...state,\n        querySuggestions,\n      };\n    case \"APPEND_ENTITIES\":\n      return {\n        ...state,\n        entities: [...state.entities, ...action.entities],\n      };\n    case \"UPDATE_FACETS\":\n      const { facets } = action;\n      return {\n        ...state,\n        facets,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { AutoCompleteResult, Facet, VerticalResults } from \"@yext/answers-core\";\nimport { createContext, Dispatch, useReducer } from \"react\";\nimport reducer, { Action } from \"./reducer\";\n\nexport type InitialStateType = {\n  loading: boolean;\n  query: string;\n  verticalresults?: VerticalResults;\n  entities: any[];\n  facets: Facet[];\n  querySuggestions: AutoCompleteResult[];\n};\n\nconst initialState: InitialStateType = {\n  loading: false,\n  query: \"\",\n  verticalresults: undefined,\n  entities: [],\n  facets: [],\n  querySuggestions: [],\n};\n\nexport const AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<Action>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst AnswersStore = ({ children }: { children: React.ReactNode }) => {\n  //@ts-ignore\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AnswersStore;\n","import { Facet, SimpleFilter } from \"@yext/answers-core\";\n\nexport const getFacetFilters = (facets: Facet[]): SimpleFilter[] => {\n  return facets\n    .map((f) => {\n      return [\n        ...f.options\n          .filter((o) => o.selected)\n          .map((o) => {\n            return o.filter;\n          }),\n      ];\n    })\n    .flat();\n};\n\nexport const toggleFacetObject = (\n  facets: Facet[],\n  facetFieldId: string,\n  optionDisplayName: string\n): Facet[] => {\n  const updatedFacets = [...facets];\n  updatedFacets.forEach((f) => {\n    if (f.fieldId === facetFieldId) {\n      f.options.forEach((o) => {\n        if (o.displayName === optionDisplayName) {\n          o.selected = !o.selected;\n        }\n      });\n    } else return;\n  });\n  return updatedFacets;\n};\n","import { useContext } from \"react\";\nimport { answersCore, verticalKey } from \"./../answers.config\";\nimport { AppContext } from \"./AnswersStore\";\nimport { getFacetFilters, toggleFacetObject } from \"./facetUtilties\";\n\nexport const useAnswersStore = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const { query, facets, entities } = state;\n\n  const runSearch = async (q: string = query) => {\n    console.log(`Getting Results for ${q}`);\n\n    dispatch({\n      type: \"SET_LOADING\",\n      loading: true,\n    });\n    dispatch({\n      type: \"SET_QUERY\",\n      query: q,\n    });\n    const res = await answersCore.verticalSearch({\n      query: q,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      // facetFilters: getFacetFilters(facets),\n    });\n    console.log(res.verticalResults.results);\n    dispatch({\n      type: \"SET_VERTICAL_RESPONSE\",\n      response: res,\n    });\n  };\n\n  const updateAutocomplete = async (q: string = query) => {\n    const res = await answersCore.verticalAutoComplete({\n      input: q,\n      verticalKey,\n    });\n    dispatch({\n      type: \"SET_QUERY_SUGGESTIONS\",\n      querySuggestions: res.results,\n    });\n  };\n\n  const toggleFacet = async (\n    facetFieldId: string,\n    optionDisplayName: string\n  ) => {\n    const updatedFacets = toggleFacetObject(\n      state.facets,\n      facetFieldId,\n      optionDisplayName\n    );\n\n    dispatch({\n      type: \"UPDATE_FACETS\",\n      facets: updatedFacets,\n    });\n    dispatch({\n      type: \"SET_LOADING\",\n      loading: true,\n    });\n    const res = await answersCore.verticalSearch({\n      query,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      facetFilters: getFacetFilters(updatedFacets),\n    });\n    dispatch({\n      type: \"SET_VERTICAL_RESPONSE\",\n      response: res,\n    });\n  };\n\n  const loadMore = async () => {\n    console.log(\"Loading More\");\n    const res = await answersCore.verticalSearch({\n      query,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      facetFilters: getFacetFilters(facets),\n      offset: entities.length,\n    });\n\n    dispatch({\n      type: \"APPEND_ENTITIES\",\n      entities: res.verticalResults.results.map((r) => r.rawData),\n    });\n  };\n\n  return {\n    state,\n    actions: { runSearch, updateAutocomplete, toggleFacet, loadMore },\n  };\n};\n","import React from \"react\";\nimport ColorFacet from \"./ColorFacet\";\nimport Facet from \"./Facet\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\n\ntype Props = {\n  //Insert Props Here\n};\n\nconst Facets: React.FC<Props> = ({}) => {\n  const {\n    state: { facets },\n    actions: { toggleFacet },\n  } = useAnswersStore();\n\n  return (\n    <div className=\"flex flex-col px-4 pb-4 mt-4\">\n      {facets &&\n        facets.map((f) => (\n          <div key={f.fieldId}>\n            {f.fieldId !== \"c_color\" && (\n              <Facet\n                facet={f}\n                onSelectFacet={(o) => toggleFacet(f.fieldId, o.displayName)}\n              />\n            )}\n            {f.fieldId === \"c_color\" && (\n              <ColorFacet\n                facet={f}\n                onSelectFacet={(o) => toggleFacet(f.fieldId, o.displayName)}\n              />\n            )}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Facets;\n","import React from \"react\";\n\ntype Props = {\n  //Insert Props Here\n  children: React.ReactNode;\n};\n\nconst Modal: React.FC<Props> = ({ children }) => {\n  return (\n    <div>\n      <div className=\"fixed left-0 right-0 top-0 bottom-0 bg-gray-400 opacity-80 z-40\"></div>\n      <div className=\"fixed left-0 right-0 top-0 bottom-0 z-50 flex items-center justify-center\">\n        <div className=\"md:w-2/3 lg:w-1/2 mx-4 md:mx-0\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import classnames from \"classnames\";\nimport React, { useRef, useState } from \"react\";\nimport { FaSpinner, FaTimesCircle } from \"react-icons/fa\";\nimport { MdSearch } from \"react-icons/md\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\n\ntype Props = {\n  //Insert Props Here\n\n  placeholder?: string;\n};\n\nconst SearchBar: React.FC<Props> = ({ placeholder = \"Search ...\" }) => {\n  const inputElement = useRef(null);\n\n  const { state, actions } = useAnswersStore();\n  const { loading, querySuggestions } = state;\n  const { updateAutocomplete, runSearch } = actions;\n\n  const [query, setQuery] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedSuggestion, setSelectedSuggestion] = useState(-1);\n  const [justSearched, setJustSearched] = useState(false);\n\n  const nextSuggestion = () => {\n    setSelectedSuggestion((s) => Math.min(s + 1, querySuggestions.length - 1));\n  };\n\n  const prevSuggestion = () => {\n    setSelectedSuggestion((s) => Math.max(s - 1, -1));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    updateAutocomplete(e.target.value);\n    setSelectedSuggestion(-1);\n    setJustSearched(false);\n  };\n\n  const showQuerySuggestion =\n    isFocused && querySuggestions.length > 0 && !justSearched;\n  return (\n    <div className=\"relative mx-2 mt-2\">\n      <form\n        className=\"py-2 px-4 mb-2 flex items-center focus-within:shodow-lg focus-within:border group text-gray-700 bg-gray-100 rounded-full\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (selectedSuggestion > -1) {\n            const query = querySuggestions[selectedSuggestion].value;\n            setQuery(query);\n            runSearch(query);\n          } else {\n            runSearch(query);\n          }\n          setJustSearched(true);\n        }}\n      >\n        <MdSearch className=\"mr-2 text-gray-600 text-xl\" />\n        <input\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          ref={inputElement}\n          value={query}\n          placeholder={placeholder}\n          onChange={handleChange}\n          className=\"w-full focus:outline-none font-light bg-transparent\"\n          onKeyDown={(e) => {\n            if (e.key === \"ArrowDown\") {\n              e.preventDefault();\n              nextSuggestion();\n            } else if (e.key === \"ArrowUp\") {\n              e.preventDefault();\n              prevSuggestion();\n            }\n          }}\n        />\n        {loading && <FaSpinner className=\"animate-spin text-gray-500\" />}\n        {!loading && query.length > 0 && (\n          <FaTimesCircle\n            className=\"text-gray-300 cursor-pointer group-hover:opacity-100 opacity-0\"\n            onClick={() => {\n              setQuery(\"\");\n              runSearch(\"\");\n              updateAutocomplete(\"\");\n            }}\n          />\n        )}\n      </form>\n      {showQuerySuggestion && (\n        <div className=\"absolute top-0 mt-10 left-0 right-0 bg-white text-gray-700 font-light border-b border-l border-r shadow-lg z-50\">\n          {querySuggestions.map((q, i) => (\n            <div\n              onMouseDown={() => {\n                setQuery(q.value);\n                runSearch(q.value);\n              }}\n              className={classnames(\n                \"py-1 px-4 hover:bg-gray-100 cursor-pointer flex items-center\",\n                {\n                  \"bg-gray-100\": selectedSuggestion === i,\n                }\n              )}\n            >\n              <MdSearch className=\"mr-2 text-gray-600\" />\n              {q.value}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport SearchBar from \"./SearchBar\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  shoppingCart: {\n    quantity: number;\n    product: Product;\n  }[];\n};\n\nconst Nav: React.FC<Props> = ({ shoppingCart }) => {\n  const [showingCart, setShowingCart] = useState(false);\n  const { state, actions } = useAnswersStore();\n  const { loading, querySuggestions } = state;\n  const { updateAutocomplete, runSearch } = actions;\n  return (\n    <div className=\"border-b flex justify-between items-stretch \">\n      <div className=\"text-xl font-light px-4 text-green-700 flex items-center\">\n        Seaglass\n      </div>\n      <div className=\" items-center text-gray-700 px-4 hidden md:flex\">\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">Products</div>\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">\n          Locations\n        </div>\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">Support</div>\n        <div className=\"px-4 py-3 hover:underline cursor-pointer\">About Us</div>\n      </div>\n      <div className=\"flex\">\n        <SearchBar placeholder=\"Search for glasses...\" />\n        <div\n          className=\"border-l p-4 text-gray-700 flex items-center\"\n          onMouseEnter={() => setShowingCart(true)}\n          onMouseLeave={() => setShowingCart(false)}\n        >\n          <FaShoppingCart />\n          {shoppingCart.length > 0 && (\n            <div className=\"absolute right-0 top-0 m-2 p-1 h-4 w-4 flex items-center rounded-full bg-gray-700 text-gray-100 text-xs\">\n              {shoppingCart.length}\n            </div>\n          )}\n          {showingCart && (\n            <div className=\"flex flex-col absolute top-16 right-0 mr-2 rounded bg-white border shadow-lg z-50\">\n              {shoppingCart.map((c) => (\n                <div className=\"border-b px-4 py-2 w-64 flex items-center\">\n                  <div className=\"w-24 mr-4\">\n                    <div>\n                      <img\n                        src={c.product.photoGallery[2].image.sourceUrl}\n                        width=\"100%\"\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"font-medium\">{c.product.name}</div>\n                    <div className=\"text-gray-500 text-sm\">\n                      {c.quantity} x ${c.product.c_price}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { FaCartPlus, FaSearchPlus, FaTimes } from \"react-icons/fa\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  product: Product;\n  onClose: () => void;\n  addToCart: () => void;\n};\n\nconst ProductOverlayCard = ({ product, onClose, addToCart }: Props) => {\n  const [selectedImageURL, setSelectedImageURL] = useState(\n    product.photoGallery[2].image.url\n  );\n  const buttonClassName =\n    \"px-4 py-3  bg-gray-100 text-gray-500 flex items-center justify-center cursor-pointer hover:bg-gray-200\";\n  return (\n    <div className=\"bg-white rounded shadow-xl relative overflow-hidden\">\n      <div\n        className=\"text-gray-500 p-2 hover:bg-gray-100 absolute top-0 right-0 m-2 rounded cursor-pointer z-50\"\n        onClick={onClose}\n      >\n        <FaTimes />\n      </div>\n      <div className=\"p-4\">\n        <div className=\" aspect-w-4 aspect-h-2 z-10 mb-2\">\n          <div className=\"flex items-center  p-4 overflow-hidden\">\n            <img src={selectedImageURL} alt=\"\" width=\"100%\" />\n          </div>\n        </div>\n        <div className=\"grid grid-cols-6\">\n          {product.photoGallery.map((i, j) => (\n            <div\n              key={j}\n              className=\"px-2 flex items-center hover:opactiy-70\"\n              onMouseEnter={() => setSelectedImageURL(i.image.url)}\n            >\n              <div>\n                <img src={i.image.url} />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"font-medium text-lg text-black mt-4\">\n          {product.name}\n        </div>\n        <div className=\"text-gray-500 font-light text-sm\">\n          {product.c_material}, {product.c_shape}\n        </div>\n        <div className=\"text-gray-500 font-light text-sm\">2 colors</div>\n        <div className=\" font-medium mt-2 text-sm\">${product.c_price}</div>\n      </div>\n      <div className=\"grid grid-cols-2\">\n        <div\n          onClick={addToCart}\n          className={classnames(\n            buttonClassName,\n            \" border-t border-r border-gray-200\"\n          )}\n        >\n          <FaCartPlus className=\"mr-2\" />\n          Add To Cart\n        </div>\n        <div\n          className={classnames(buttonClassName, \"border-t border-gray-200\")}\n        >\n          <FaSearchPlus className=\"mr-2\" />\n          View Details\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductOverlayCard;\n","import classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { FaCartPlus, FaSearchPlus } from \"react-icons/fa\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  product: Product;\n  addToCart: () => void;\n  showQuickLook: () => void;\n};\n\nconst ProductCard = ({ product, showQuickLook, addToCart }: Props) => {\n  const [mouseOver, setMouseOver] = useState(false);\n\n  return (\n    <div\n      className={classnames(\n        \"rounded cursor-pointer transform  transition ease-in-out group overflow-hidden relative\",\n        \"md:hover:shadow-xl md:hover:bg-white md:hover:z-30 md:hover:scale-105 md:hover:z-100\"\n      )}\n      onMouseEnter={() => setMouseOver(true)}\n      onMouseLeave={() => setMouseOver(false)}\n    >\n      <div className=\"p-4\" onClick={showQuickLook}>\n        <div className=\" aspect-w-4 aspect-h-2\">\n          {product.photoGallery.length > 0 && (\n            <div className=\"flex items-center  p-4\">\n              <img\n                src={product.photoGallery[2].image.url}\n                alt=\"\"\n                width=\"100%\"\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"font-medium text-black mt-4\">{product.name}</div>\n        <div className=\"text-gray-500 font-light text-sm\">\n          {product.c_material}, {product.c_shape}\n        </div>\n        <div className=\"text-gray-500 font-light text-sm\">2 colors</div>\n        <div className=\" font-medium mt-2 text-sm\">${product.c_price}</div>\n      </div>\n\n      <div className=\"flex opacity-0 md:group-hover:opacity-100 text-gray-500 uppercase text-xs transition ease-in-out  justify-center\">\n        <div\n          className=\"flex justify-center items-center bg-gray-100 hover:bg-gray-200 px-2 py-2 cursor-pointer flex-grow\"\n          onClick={showQuickLook}\n        >\n          <FaSearchPlus className=\"mr-2\" />\n          Look\n        </div>\n        <div\n          className=\"flex justify-center items-center bg-gray-100 hover:bg-gray-200 px-2 py-2 cursor-pointer flex-grow\"\n          onClick={addToCart}\n        >\n          <FaCartPlus className=\"mr-2\" />\n          Cart\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport ProductCard from \"./ProductCard\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  onQuickLook: (product: Product) => void;\n  onAddToCart: (product: Product) => void;\n};\n\nconst ProductGrid: React.FC<Props> = ({ onQuickLook, onAddToCart }) => {\n  const {\n    state: { verticalresults, entities: products },\n    actions: { loadMore },\n  } = useAnswersStore();\n\n  return (\n    <InfiniteScroll\n      className=\"overflow-x-auto\"\n      style={{ overflow: \"visible\" }}\n      hasMore={verticalresults!.resultsCount > products.length}\n      next={loadMore}\n      dataLength={products.length}\n      endMessage={\n        <div className=\"mt-12 mb-4 text-center text-gray-500 font-light text-sm\">\n          that's all...\n        </div>\n      }\n      loader={\n        <div className=\"h-12 flex items-center justify-center\">\n          <FaSpinner className=\"animate-spin text-gray-500\" />\n        </div>\n      }\n    >\n      <FlipMove className=\"grid  grid-cols-1 md:grid-cols-2 lg:grid-cols-4 2xl:grid-cols-6\">\n        {products.map((p, i) => {\n          return (\n            <div key={p.id} className=\"overflow-visible z-40\">\n              <ProductCard\n                product={p}\n                showQuickLook={() => onQuickLook(p)}\n                addToCart={() => onAddToCart(p)}\n              />\n            </div>\n          );\n        })}\n      </FlipMove>\n    </InfiniteScroll>\n  );\n};\n\nexport default ProductGrid;\n","import React from \"react\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\n\ntype Props = {\n  //Insert Props Here\n};\n\nconst ResultsSummary: React.FC<Props> = () => {\n  const { state } = useAnswersStore();\n  const { verticalresults, entities } = state;\n  return (\n    <div className=\"flex justify-between items-center mb-2\">\n      <div className=\"text-sm text-gray-500\">\n        Showing {entities.length} of {verticalresults?.resultsCount} glasses\n      </div>\n      <div className=\"text-gray-500 text-sm flex items-center hover:underline cursor-pointer\">\n        Sort By <FaChevronDown className=\"ml-2\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsSummary;\n","import React from \"react\";\nimport ProductGrid from \"./ProductGrid\";\nimport ResultsSummary from \"./ResultsSummary\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  addProductToCart: (product: Product) => void;\n  setQuickLookProduct: (product: Product) => void;\n};\n\nconst Results: React.FC<Props> = ({\n  addProductToCart,\n  setQuickLookProduct,\n}) => {\n  const {\n    state: { verticalresults, entities: products },\n  } = useAnswersStore();\n\n  if (!verticalresults) return null;\n  return (\n    <div className=\"p-4 flex-grow\">\n      <ResultsSummary />\n      <ProductGrid\n        onAddToCart={addProductToCart}\n        onQuickLook={(p) => setQuickLookProduct(p)}\n      />\n    </div>\n  );\n};\n\nexport default Results;\n","import React, { useEffect, useState } from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport Facets from \"./Facets\";\nimport Modal from \"./Modal\";\nimport Nav from \"./Nav\";\nimport ProductOverlayCard from \"./ProductOverlayCard\";\nimport Results from \"./Results\";\nimport { useAnswersStore } from \"./store/useAnswersStore\";\nimport { Product } from \"./types\";\nimport { useCart } from \"./useCart\";\n\nfunction App() {\n  const [quickLookProduct, setQuickLookProduct] = useState<Product | null>(\n    null\n  );\n\n  const { shoppingCart, addProductToCart } = useCart();\n  const {\n    state,\n    actions: { runSearch },\n  } = useAnswersStore();\n  useEffect(() => {\n    runSearch();\n  }, []);\n\n  return (\n    <div className=\"mb-12 relative\">\n      <Nav shoppingCart={shoppingCart} />\n      <div className=\"flex items-start\">\n        <div className=\"w-64 xl:w-72 sticky top-0 max-h-screen overflow-y-auto pb-12 hidden md:block\">\n          {state.query.length > 0 && (\n            <div className=\"px-4 mt-5 flex items-center\">\n              <div className=\"font-medium\">{state.query} </div>\n\n              {!state.loading && (\n                <div className=\"ml-1\">\n                  ({state.verticalresults?.resultsCount.toLocaleString()})\n                </div>\n              )}\n              {state.loading && (\n                <>\n                  <div className=\"flex-grow\"></div>\n                  <div className=\"ml-1\">\n                    <FaSpinner className=\"animate-spin text-gray-500\" />\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n          <Facets />\n        </div>\n        <Results\n          addProductToCart={addProductToCart}\n          setQuickLookProduct={setQuickLookProduct}\n        />\n        {quickLookProduct && (\n          <Modal>\n            <ProductOverlayCard\n              addToCart={() => {\n                addProductToCart(quickLookProduct);\n                setQuickLookProduct(null);\n              }}\n              product={quickLookProduct}\n              onClose={() => setQuickLookProduct(null)}\n            />\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport { FaCartPlus } from \"react-icons/fa\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Product } from \"./types\";\nexport const useCart = () => {\n  const [shoppingCart, setShoppingCart] = useState<\n    {\n      quantity: number;\n      product: Product;\n    }[]\n  >([]);\n\n  const { addToast } = useToasts();\n\n  const addProductToCart = (product: Product) => {\n    setShoppingCart((cart) => {\n      let added = false;\n\n      const updatedCart = cart.map((p) => {\n        if (p.product.id === product.id) {\n          added = true;\n          return {\n            product,\n            quantity: p.quantity + 1,\n          };\n        } else return p;\n      });\n      if (!added) {\n        updatedCart.push({\n          quantity: 1,\n          product,\n        });\n      }\n      return updatedCart;\n    });\n    addToast(\n      <div className=\"py-2 px-4 flex items-center font-light bg-gray-600 text-white text-sm  shadow-sm z-50 rounded-sm mb-2 mr-4 mt-4\">\n        <FaCartPlus />\n        <div className=\"ml-2\">Added</div>\n        <span className=\"font-medium ml-1\">{product.name}</span>\n        <div className=\"ml-1\">to cart</div>\n      </div>,\n      {\n        appearance: \"success\",\n        autoDismiss: true,\n      }\n    );\n  };\n\n  return {\n    shoppingCart,\n    addProductToCart,\n  };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AnswersStore from \"./store/AnswersStore\";\n\ntype ToastProps = {\n  children: React.ReactNode;\n};\n\nconst MyCustomToast = ({ children }: ToastProps) => (\n  <div className=\"\">{children}</div>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider components={{ Toast: MyCustomToast }}>\n      <AnswersStore>\n        <App />\n      </AnswersStore>\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}