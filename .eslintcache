[{"/Users/maxshaw/Documents/GitHub/answers-product-search/src/App.tsx":"1","/Users/maxshaw/Documents/GitHub/answers-product-search/src/index.tsx":"2","/Users/maxshaw/Documents/GitHub/answers-product-search/src/useAnswers.ts":"3","/Users/maxshaw/Documents/GitHub/answers-product-search/src/reportWebVitals.ts":"4","/Users/maxshaw/Documents/GitHub/answers-product-search/src/ProductCard.tsx":"5","/Users/maxshaw/Documents/GitHub/answers-product-search/src/SearchBar.tsx":"6","/Users/maxshaw/Documents/GitHub/answers-product-search/src/Facet.tsx":"7","/Users/maxshaw/Documents/GitHub/answers-product-search/src/ProductOverlayCard.tsx":"8","/Users/maxshaw/Documents/GitHub/answers-product-search/src/Nav.tsx":"9"},{"size":4833,"mtime":1608577028779,"results":"10","hashOfConfig":"11"},{"size":788,"mtime":1608576893674,"results":"12","hashOfConfig":"11"},{"size":2448,"mtime":1608518252170,"results":"13","hashOfConfig":"11"},{"size":425,"mtime":1608420976205,"results":"14","hashOfConfig":"11"},{"size":2116,"mtime":1608522605377,"results":"15","hashOfConfig":"11"},{"size":3706,"mtime":1608523840689,"results":"16","hashOfConfig":"11"},{"size":2457,"mtime":1608566092804,"results":"17","hashOfConfig":"11"},{"size":2471,"mtime":1608522595959,"results":"18","hashOfConfig":"11"},{"size":2287,"mtime":1608568300743,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16avlnu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/maxshaw/Documents/GitHub/answers-product-search/src/App.tsx",["40","41"],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/index.tsx",[],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/useAnswers.ts",["42"],"import {\n  AnswersCore,\n  AutoCompleteResult,\n  Facet,\n  VerticalSearchResponse,\n} from \"@yext/answers-core\";\nimport { useEffect, useState } from \"react\";\nimport { useImmer } from \"use-immer\";\n\nexport const useAnswersVertical = <T>(\n  answers: AnswersCore,\n  verticalKey: string\n) => {\n  const [\n    verticalResponse,\n    setVerticalResponse,\n  ] = useState<VerticalSearchResponse>();\n  const [entities, setEntities] = useState<T[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [localState, setLocalState] = useImmer<{ facets: Facet[] }>({\n    facets: [],\n  });\n\n  const [isDirty, setIsDirty] = useState(true);\n  const [querySuggestions, setQuerySuggestions] = useState<\n    AutoCompleteResult[]\n  >([]);\n\n  const { facets } = localState;\n  const facetFilters = facets\n    .map((f) => {\n      return [\n        ...f.options\n          .filter((o) => o.selected)\n          .map((o) => {\n            return o.filter;\n          }),\n      ];\n    })\n    .flat();\n\n  const runSearch = async (q: string = query) => {\n    console.log(`Getting Results for ${q}`);\n    setLoading(true);\n    const res = await answers.verticalSearch({\n      query: q,\n      context: {},\n      verticalKey,\n      retrieveFacets: true,\n      facetFilters,\n    });\n    console.log(res.verticalResults.results);\n    setVerticalResponse(res);\n    setEntities(res.verticalResults.results.map((r) => r.rawData as T));\n    setLoading(false);\n    setLocalState((f) => {\n      f.facets = (res.facets as Facet[]) || [];\n    });\n  };\n\n  const toggleFacet = (facet: string, option: string) => {\n    setLocalState((s) => {\n      s.facets.forEach((f) => {\n        if (f.displayName === facet) {\n          f.options.forEach((o) => {\n            if (o.displayName === option) {\n              o.selected = !o.selected;\n            }\n          });\n        } else return;\n      });\n    });\n    setIsDirty(true);\n  };\n\n  const updateAutocomplete = async (q: string = query) => {\n    const res = await answers.verticalAutoComplete({\n      input: q,\n      verticalKey,\n    });\n    setQuerySuggestions(res.results);\n  };\n\n  useEffect(() => {\n    if (isDirty) {\n      runSearch(query);\n      setIsDirty(false);\n    }\n  }, [isDirty]);\n\n  return {\n    results: verticalResponse?.verticalResults,\n    facets,\n    query,\n    setQuery,\n    toggleFacet,\n    runSearch,\n    updateAutocomplete,\n    querySuggestions,\n    entities,\n    loading,\n  };\n};\n","/Users/maxshaw/Documents/GitHub/answers-product-search/src/reportWebVitals.ts",[],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/ProductCard.tsx",["43"],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/SearchBar.tsx",[],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/Facet.tsx",[],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/ProductOverlayCard.tsx",["44"],"/Users/maxshaw/Documents/GitHub/answers-product-search/src/Nav.tsx",["45"],"import React, { useState } from \"react\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport { Product } from \"./types\";\n\ntype Props = {\n  //Insert Props Here\n  shoppingCart: {\n    quantity: number;\n    product: Product;\n  }[];\n};\n\nconst Nav: React.FC<Props> = ({ shoppingCart }) => {\n  const [showingCart, setShowingCart] = useState(false);\n  return (\n    <div className=\"border-b flex justify-between items-stretch \">\n      <div className=\"text-xl font-light px-4 text-green-700 flex items-center\">\n        Seaglass\n      </div>\n      <div className=\"flex items-center text-gray-700 px-4\">\n        <div className=\"px-4 py-2 hover:underline cursor-pointer\">Products</div>\n        <div className=\"px-4 py-2 hover:underline cursor-pointer\">\n          Locations\n        </div>\n        <div className=\"px-4 py-2 hover:underline cursor-pointer\">Support</div>\n        <div className=\"px-4 py-2 hover:underline cursor-pointer\">About Us</div>\n      </div>\n      <div\n        className=\"border-l p-4 text-gray-700 flex items-center\"\n        onMouseEnter={() => setShowingCart(true)}\n        onMouseLeave={() => setShowingCart(false)}\n      >\n        <FaShoppingCart />\n        {shoppingCart.length > 0 && (\n          <div className=\"absolute right-0 top-0 m-2 p-1 h-4 w-4 flex items-center rounded-full bg-gray-700 text-gray-100 text-xs\">\n            {shoppingCart.length}\n          </div>\n        )}\n        {showingCart && (\n          <div className=\"flex flex-col absolute top-16 right-0 mr-2 rounded bg-white border shadow-lg z-50\">\n            {shoppingCart.map((c) => (\n              <div className=\"border-b px-4 py-2 w-64 flex items-center\">\n                <div className=\"w-24 mr-4\">\n                  <div>\n                    <img\n                      src={c.product.photoGallery[2].image.sourceUrl}\n                      width=\"100%\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <div className=\"font-medium\">{c.product.name}</div>\n                  <div className=\"text-gray-500 text-sm\">\n                    {c.quantity} x ${c.product.c_price}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n",{"ruleId":"46","severity":1,"message":"47","line":26,"column":5,"nodeType":"48","messageId":"49","endLine":26,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":27,"column":5,"nodeType":"48","messageId":"49","endLine":27,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":90,"column":6,"nodeType":"53","endLine":90,"endColumn":15,"suggestions":"54"},{"ruleId":"46","severity":1,"message":"55","line":13,"column":10,"nodeType":"48","messageId":"49","endLine":13,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":41,"column":17,"nodeType":"58","endLine":41,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":45,"column":21,"nodeType":"58","endLine":48,"endColumn":23},"@typescript-eslint/no-unused-vars","'setQuery' is assigned a value but never used.","Identifier","unusedVar","'query' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'query' and 'runSearch'. Either include them or remove the dependency array.","ArrayExpression",["59"],"'mouseOver' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"60","fix":"61"},"Update the dependencies array to be: [isDirty, query, runSearch]",{"range":"62","text":"63"},[2226,2235],"[isDirty, query, runSearch]"]